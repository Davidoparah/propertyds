## What is ansible?

Ansible is an open-source automation platform used for configuration management, application deployment, and task automation.

## Agentless

In the context of Ansible, "agentless" means it does not require any software to be installed on the nodes it manages, instead using SSH for communication and task execution.

## Playbooks

A playbook in Ansible is a YAML file containing a list of one or more plays to automate tasks on remote servers.

## Install Ansible on Mac

https://brew.sh/

brew install ansible

## Install Ansible on Win

Installing Ansible on Windows is not as straightforward as on Linux or macOS because Ansible does not natively run on Windows. However, you can use Windows Subsystem for Linux (WSL).

https://www.youtube.com/watch?v=xeMDMu7wU3A&ab_channel=MichaelCrilly

https://fakhridarmawan.medium.com/install-ansible-on-windows-subsystem-linux-ac9245219077

Open PowerShell as Administrator and run:
wsl --install

Restart:
Restart windows if required

Install "Ubuntu":
Open app microsoft store and search and install "Ubuntu"

Go to start menu and open "Ubuntu"

## spin up vm

terraform -chdir=terraform apply

## create ansible config file

touch ansible.cfg

## ansible.cfg

[defaults]
inventory = ./ansible/inventory.ini
remote_user = root
host_key_checking = False
private_key_file = /Users/mujimoyen/.ssh/sourcingapp_ed25519

[privilege_escalation]
become = True
become_method = sudo
become_user = root

## create ansible directory

mkdir ansible &&
touch ansible/inventory.ini &&
touch ansible/playbook.yml

## inventory.ini

[swarm_managers]
manager1 ansible_host=46.101.94.188 ansible_ssh_user=root ansible_ssh_private_key_file=/Users/mujimoyen/.ssh/job_plus_ed25519

[swarm_workers]
worker1 ansible_host=167.71.134.243 ansible_ssh_user=root ansible_ssh_private_key_file=/Users/mujimoyen/.ssh/job_plus_ed25519

## playbook.yml

## Host

- hosts: swarm_managers
  become: yes

We are targeting the swarm_manager nodes
and `become: yes` is where we escalate the privilege to run as superuser/root

## Task

A task is the smallest unit of action in an Ansible playbook. It represents a single procedure to be executed, such as installing a package, copying a file, or executing a command.

## Task anatomy example

`name:` Describes what the task does
`module_name:` Specifies the module to execute, such as apt, file, copy, etc.
`key: value:` Arguments for the module. These are module-specific options.
`register:` Captures the output of a task into a variable.

## Ansible Role

Roles enable the sharing of automation tasks.

## automated ansible create role

ansible-galaxy init <role_name>

## manual role create

using manual creation of role to keep things simple
especially for our use case

mkdir -p ansible/roles/common_tasks/tasks &&
touch ansible/roles/common_tasks/tasks/main.yml

## content of role's main.yml

existing playbook content ( minus header definition )

## servers inventory

[servers:children]
swarm_managers
swarm_workers

## create manager and worker playbooks

touch ansible/manager_playbook.yml &&
touch ansible/worker_playbook.yml &&
touch ansible/servers_playbook.yml

## manager_playbook.yml

---

- hosts: swarm_managers
  become: yes

  roles:

  - common_tasks

## Worker_playbook.yml

---

- hosts: swarm_workers
  become: yes

  roles:

  - common_tasks

## servers_playbook.yml

---

- hosts: servers
  become: yes

  roles:

  - common_tasks

## run playbooks

ansible-playbook -i ansible/inventory.ini ansible/manager_playbook.yml -v
ansible-playbook -i ansible/inventory.ini ansible/worker_playbook.yml -v

ansible-playbook -i ansible/inventory.ini ansible/servers_playbook.yml -v

ansible web_servers -m command -a 'fdisk -l' -u admin --become -K BECOME password:**\*\***
ansible web_servers -m command -a 'df -h'
ansible web_servers -m command -a 'ls -l'
ansible web_servers -m setup
ansible web_servers -m setup -a "filter=\*family" --check

Net show route
